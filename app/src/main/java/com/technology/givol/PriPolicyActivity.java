package com.technology.givol;

import android.content.Context;
import android.os.Bundle;
import android.view.View;
import android.widget.ExpandableListView;
import android.widget.ImageView;

import androidx.appcompat.app.AppCompatActivity;

import com.technology.givol.adapter.ExpandableListAdapter;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class PriPolicyActivity extends AppCompatActivity implements View.OnClickListener {
//        com.technology.givol.adapter.ExpandableListAdapter adapter;
//        ExpandableListView expandableListView;
//        HashMap<String, List<String>> hashMap;
//        ArrayList<String> header;
//        ImageView back_img;

    ExpandableListAdapter adapter;
    ImageView back_img;
    String change_privacy_policy = "We may update our Privacy Policy from time to time. Thus, you are advised to review this page periodically for any changes.We will notify you of any changes by posting the new Privacy Policy on this page.These changes are effective immediately after they are posted on this page.";
    String child_privacy = "These Services do not address anyone under the age of 13.We do not knowingly collect personally identifiable information from children under 13.In the case we discover that a child under 13 has provided us with personal information,we immediately delete this from our servers.If you are a parent or guardian and you are aware that your child has provided us with personal information,please contact us so that we will be able to do necessary actions.";
    String colle_use_1 = "For a better experience,while using our Service,we may require you to provide us with certain personally identifiable information,including but not limited to Name,Age,Phone,EMail,Location.The information that we request will be retained by us and used as described in this privacy policy.";
    String colle_use_2 = "The app does use third party services that may collect information used to identify you.";
    String colle_use_3 = "Link to privacy policy of third party service providers used by the app";
    String colle_use_4 = "Google Play Services";
    String colle_use_5 = "Log Data";
    String colle_use_6 = "We want to inform you that whenever you use our Service,in a case of an error in the app we collect data and information (through third party products) on your phone called Log Data.This Log Data may include information such as your device Internet Protocol (â€œIPâ€) address,device name,operating system version,the configuration of the app when utilizing our Service,the time and date of your use of the Service,and other statistics.";
    String contact_us_1 = "If you have any questions or suggestions about our Privacy Policy,do not hesitate to contact us at [Admin@Givolapp.com].";
    String contact_us_2 = "This privacy policy page was created at privacypolicytemplate.net and modified/generated by App Privacy Policy Generator";
    String cookies_1 = "Cookies are files with a small amount of data that are commonly used as anonymous unique identifiers.These are sent to your browser from the websites that you visit and are stored on your device's internal memory.";
    String cookies_2 = "This Service does not use these â€œcookiesâ€ explicitly.However, the app may use third party code and libraries that use â€œcookiesâ€ to collect information and improve their services.You have the option to either accept or refuse these cookies and know when a cookie is being sent to your device.If you choose to refuse our cookies, you may not be able to use some portions of this Service.";
    String country_name_policy;
    ExpandableListView expandableListView;
    HashMap<String, List<String>> hashMap;
    ArrayList<String> header;
    String link_other_site = "This Service may contain links to other sites.If you click on a third-party link, you will be directed to that site.Note that these external sites are not operated by us. Therefore,we strongly advise you to review the Privacy Policy of these websites.We have no control over and assume no responsibility for the content,privacy policies, or practices of any third-party sites or services.";
    HashMap<String, List<String>> listDataChild;
    List<String> listDataParent;
    String policy_activty_no;
    String policy_contest_id;
    String policy_first_des = "Ego Media built the [Givol] app as a Freemium app.This SERVICE is provided by Ego Media at no cost and is intended for use as is.";
    String policy_four_des = "The terms used in this Privacy Policy have the same meanings as in our Terms and Conditions,which is accessible at [Givol] unless otherwise defined in this Privacy Policy.";
    String policy_second_des = "This page is used to inform visitors regarding our policies with the collection,use and disclosure of Personal Information if anyone decided to use our Service.";
    String policy_third_des = "If you choose to use our Service,then you agree to the collection and use of information in relation to this policy.The Personal Information that we collect is used for providing and improving the Service.We will not use or share your information with anyone except as described in this Privacy Policy.";
    String security_1 = "We value your trust in providing us your Personal Information,thus we are striving to use commercially acceptable means of protecting it.But remember that no method of transmission over the internet,or method of electronic storage is 100% secure and reliable,and we cannot guarantee its absolute security.";
    String service_1 = "We may employ third-party companies and individuals due to the following reasons:";
    String service_2 = "To facilitate our Service;";
    String service_3 = "To provide the Service on our behalf;";
    String service_4 = "To perform Service-related services; or";
    String service_5 = "To assist us in analyzing how our Service is used.";
    String service_6 = "We want to inform users of this Service that these third parties have access to your Personal Information.The reason is to perform the tasks assigned to them on our behalf.However,they are obligated not to disclose or use the information for any other purpose.";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_pri_policy);
//            expandableListView = (ExpandableListView) findViewById(R.id.simple_expandable_listview);
//            expandableListView.setGroupIndicator(null);
//            setItems();
//            adapter = new ExpandableListAdapter(this, this.header, this.hashMap);
//            expandableListView.setAdapter(adapter);
//            expandableListView.setOnGroupClickListener(new ExpandableListView.OnGroupClickListener() {
//                @Override
//                public boolean onGroupClick(ExpandableListView parent, View v, int groupPosition, long id) {
//                    return false;
//                }
//            });
//            expandableListView.setOnGroupExpandListener(new ExpandableListView.OnGroupExpandListener() {
//                public void onGroupExpand(int groupPosition) {
//                    Context applicationContext = PriPolicyActivity.this.getApplicationContext();
//                    StringBuilder sb = new StringBuilder();
//                    sb.append((String) PriPolicyActivity.this.header.get(groupPosition));
//                    sb.append(" Expanded");
//                    Toast.makeText(applicationContext, sb.toString(),Toast.LENGTH_SHORT).show();
//                }
//            });
//            expandableListView.setOnGroupCollapseListener(new ExpandableListView.OnGroupCollapseListener() {
//                public void onGroupCollapse(int groupPosition) {
//                    Context applicationContext = PriPolicyActivity.this.getApplicationContext();
//                    StringBuilder sb = new StringBuilder();
//                    sb.append((String) PriPolicyActivity.this.header.get(groupPosition));
//                    sb.append(" Collapsed");
//                    Toast.makeText(applicationContext, sb.toString(), Toast.LENGTH_SHORT).show();
//                }
//            });
//            expandableListView.setOnChildClickListener(new ExpandableListView.OnChildClickListener() {
//                public boolean onChildClick(ExpandableListView parent, View v, int groupPosition, int childPosition, long id) {
//                    Context applicationContext = PriPolicyActivity.this.getApplicationContext();
//                    StringBuilder sb = new StringBuilder();
//                    sb.append((String) PriPolicyActivity.this.header.get(groupPosition));
//                    sb.append(" : ");
//                    sb.append((String) ((List) PriPolicyActivity.this.hashMap.get(PriPolicyActivity.this.header.get(groupPosition))).get(childPosition));
//                    Toast.makeText(applicationContext, sb.toString(), Toast.LENGTH_SHORT).show();
//                    return false;
//                }
//            });
//            final int[] prevExpandPosition = {-1};
//            expandableListView.setOnGroupExpandListener(new ExpandableListView.OnGroupExpandListener() {
//                @Override
//                public void onGroupExpand(int groupPosition) {
//                    if (prevExpandPosition[0] >= 0 && prevExpandPosition[0] != groupPosition) {
//                        expandableListView.collapseGroup(prevExpandPosition[0]);
//                    }
//                    prevExpandPosition[0] = groupPosition;
//                }
//            });
//
//            back_img=(ImageView)findViewById(R.id.back_img);
//            back_img.setOnClickListener(this);
//        }
//
//    /* access modifiers changed from: 0000 */
//    public void setItems() {
//        String str;
//        this.header = new ArrayList<>();
//        String str2 = "What do we with your \ninformation";
//        this.header.add(str2);
//        this.header.add("Consent");
//        this.header.add("Disclosure");
//        this.header.add("Third party \nservices");
//        this.header.add("Changes to this privacy\npolicy");
//
//        List<String> child1 = new ArrayList<>();
//        List<String> child2 = new ArrayList<>();
//        List<String> child3 = new ArrayList<>();
//        List<String> child4 = new ArrayList<>();
//        List<String> child5 = new ArrayList<>();
//        this.hashMap = new HashMap<>();
//        int i = 1;
//        while (true) {
//            str = "Child";
//            if (i >= 5) {
//                break;
//            }
//            StringBuilder sb = new StringBuilder();
//            sb.append(str);
//            sb.append(i);
//            child1.add(sb.toString());
//            i++;
//        }
//        for (int i2 = 1; i2 < 5; i2++) {
//            StringBuilder sb2 = new StringBuilder();
//            sb2.append(str);
//            sb2.append(i2);
//            child2.add(sb2.toString());
//        }
//        for (int i3 = 1; i3 < 6; i3++) {
//            StringBuilder sb3 = new StringBuilder();
//            sb3.append(str);
//            sb3.append(i3);
//            child3.add(sb3.toString());
//        }
//        for (int i4 = 1; i4 < 7; i4++) {
//            StringBuilder sb4 = new StringBuilder();
//            sb4.append(str);
//            sb4.append(i4);
//            child4.add(sb4.toString());
//        }
//        for (int i5 = 1; i5 < 5; i5++) {
//            StringBuilder sb5 = new StringBuilder();
//            sb5.append(str);
//            sb5.append(i5);
//            child5.add(sb5.toString());
//        }
//
//        this.hashMap.put(this.header.get(0), child1);
//        this.hashMap.put(this.header.get(1), child2);
//        this.hashMap.put(this.header.get(2), child3);
//        this.hashMap.put(this.header.get(3), child4);
//        this.hashMap.put(this.header.get(4), child5);
//
//    }
//
//    @Override
//    public void onClick(View v) {
//        switch (v.getId())
//        {
//            case R.id.back_img:
//                startActivity(new Intent(getApplicationContext(), NavActivity.class));
//                break;
//        }
//
//    }
//}

        Bundle bundle = getIntent().getExtras();
        if (bundle != null) {
            this.country_name_policy = bundle.getString("COUNTRY_NAME");
            this.policy_activty_no = bundle.getString("ACTIVITY_NO");
            this.policy_contest_id = bundle.getString("CATEGORY_ID");
        }
        this.expandableListView = (ExpandableListView) findViewById(R.id.simple_expandable_listview);
        this.expandableListView.setGroupIndicator(null);
        createListData();
        this.expandableListView.setOnGroupClickListener(new ExpandableListView.OnGroupClickListener() {
            public boolean onGroupClick(ExpandableListView parent, View v, int groupPosition, long id) {
                return false;
            }
        });
        this.expandableListView.setOnGroupExpandListener(new ExpandableListView.OnGroupExpandListener() {
            public void onGroupExpand(int groupPosition) {
                Context applicationContext = PriPolicyActivity.this.getApplicationContext();
                StringBuilder sb = new StringBuilder();
                sb.append((String) PriPolicyActivity.this.listDataParent.get(groupPosition));
                sb.append(" Expanded");
            }
        });
        this.expandableListView.setOnGroupCollapseListener(new ExpandableListView.OnGroupCollapseListener() {
            public void onGroupCollapse(int groupPosition) {
                Context applicationContext = PriPolicyActivity.this.getApplicationContext();
                new StringBuilder().append((String) PriPolicyActivity.this.listDataParent.get(groupPosition));
            }
        });
        this.expandableListView.setOnChildClickListener(new ExpandableListView.OnChildClickListener() {
            public boolean onChildClick(ExpandableListView parent, View v, int groupPosition, int childPosition, long id) {
                Context applicationContext = PriPolicyActivity.this.getApplicationContext();
                new StringBuilder();
                return false;
            }
        });
        final int[] prevExpandPosition = {-1};
        this.expandableListView.setOnGroupExpandListener(new ExpandableListView.OnGroupExpandListener() {
            public void onGroupExpand(int groupPosition) {
                int[] iArr = prevExpandPosition;
                if (iArr[0] >= 0 && iArr[0] != groupPosition) {
                    PriPolicyActivity.this.expandableListView.collapseGroup(prevExpandPosition[0]);
                }
                prevExpandPosition[0] = groupPosition;
            }
        });
        this.back_img = (ImageView) findViewById(R.id.back_img);
        this.back_img.setOnClickListener(this);
    }

    public void setItems() {
        String str;
        this.header = new ArrayList<>();
        this.header.add("Privacy Policy");
        this.header.add("Information Collection and Use");
        this.header.add("Cookies");
        this.header.add("Service Providers");
        this.header.add("Security");
        this.header.add("Links to Other Sites");
        this.header.add("Childrenâ€™s Privacy");
        this.header.add("Changes to This Privacy Policy");
        this.header.add("Contact Us");
        List<String> child1 = new ArrayList<>();
        List<String> child2 = new ArrayList<>();
        List<String> child3 = new ArrayList<>();
        List<String> child4 = new ArrayList<>();
        List<String> child5 = new ArrayList<>();
        List<String> child6 = new ArrayList<>();
        List<String> child7 = new ArrayList<>();
        List<String> child8 = new ArrayList<>();
        List<String> child9 = new ArrayList<>();
        this.hashMap = new HashMap<>();
        int i = 1;
        while (true) {
            str = "\n";
            if (i >= 2) {
                break;
            }
            StringBuilder sb = new StringBuilder();
            sb.append(this.policy_first_des);
            sb.append(str);
            sb.append(str);
            sb.append(this.policy_second_des);
            sb.append(str);
            sb.append(str);
            sb.append(this.policy_third_des);
            sb.append(str);
            sb.append(str);
            sb.append(this.policy_four_des);
            child1.add(sb.toString());
            i++;
        }
        for (int i2 = 1; i2 < 2; i2++) {
            StringBuilder sb2 = new StringBuilder();
            sb2.append(this.colle_use_1);
            sb2.append(str);
            sb2.append(str);
            sb2.append(this.colle_use_2);
            sb2.append(str);
            sb2.append(str);
            sb2.append(this.colle_use_3);
            sb2.append(str);
            sb2.append(str);
            sb2.append(this.colle_use_4);
            sb2.append(str);
            sb2.append(str);
            sb2.append(this.colle_use_5);
            sb2.append(str);
            sb2.append(str);
            sb2.append(this.colle_use_6);
            child2.add(sb2.toString());
        }
        for (int i3 = 1; i3 < 2; i3++) {
            StringBuilder sb3 = new StringBuilder();
            sb3.append(this.cookies_1);
            sb3.append(str);
            sb3.append(str);
            sb3.append(this.cookies_2);
            child3.add(sb3.toString());
        }
        for (int i4 = 1; i4 < 2; i4++) {
            StringBuilder sb4 = new StringBuilder();
            sb4.append(this.service_1);
            sb4.append(str);
            sb4.append(str);
            sb4.append(this.service_2);
            sb4.append(str);
            sb4.append(str);
            sb4.append(this.service_3);
            sb4.append(str);
            sb4.append(str);
            sb4.append(this.service_4);
            sb4.append(str);
            sb4.append(str);
            sb4.append(this.service_5);
            sb4.append(str);
            sb4.append(str);
            sb4.append(this.service_6);
            child4.add(sb4.toString());
        }
        for (int i5 = 1; i5 < 2; i5++) {
            StringBuilder sb5 = new StringBuilder();
            sb5.append(this.security_1);
            child5.add(sb5.toString());
        }
        for (int i6 = 1; i6 < 2; i6++) {
            StringBuilder sb6 = new StringBuilder();
            sb6.append(this.link_other_site);
            child6.add(sb6.toString());
        }
        for (int i7 = 1; i7 < 2; i7++) {
            StringBuilder sb7 = new StringBuilder();
            sb7.append(this.child_privacy);
            child7.add(sb7.toString());
        }
        for (int i8 = 1; i8 < 2; i8++) {
            StringBuilder sb8 = new StringBuilder();
            sb8.append(this.change_privacy_policy);
            child8.add(sb8.toString());
        }
        for (int i9 = 1; i9 < 2; i9++) {
            StringBuilder sb9 = new StringBuilder();
            sb9.append(this.contact_us_1);
            sb9.append(str);
            sb9.append(str);
            sb9.append(this.contact_us_2);
            child9.add(sb9.toString());
        }
        this.hashMap.put(this.header.get(0), child1);
        this.hashMap.put(this.header.get(1), child2);
        this.hashMap.put(this.header.get(2), child3);
        this.hashMap.put(this.header.get(3), child4);
        this.hashMap.put(this.header.get(4), child5);
        this.hashMap.put(this.header.get(5), child6);
        this.hashMap.put(this.header.get(6), child7);
        this.hashMap.put(this.header.get(7), child8);
        this.hashMap.put(this.header.get(8), child9);
    }

    private void createListData() {
        this.listDataParent = new ArrayList();
        this.listDataChild = new HashMap<>();
        this.listDataParent.add("Privacy Policy");
        this.listDataParent.add("Information Collection and Use");
        this.listDataParent.add("Cookies");
        this.listDataParent.add("Service Providers");
        this.listDataParent.add("Security");
        this.listDataParent.add("Links to Other Sites");
        this.listDataParent.add("Childrenâ€™s Privacy");
        this.listDataParent.add("Changes to This Privacy Policy");
        this.listDataParent.add("Contact Us");
        List<String> policy_description = new ArrayList<>();
        policy_description.add(this.policy_first_des);
        policy_description.add(this.policy_second_des);
        policy_description.add(this.policy_third_des);
        policy_description.add(this.policy_four_des);
        List<String> colle_description = new ArrayList<>();
        colle_description.add(this.colle_use_1);
        colle_description.add(this.colle_use_2);
        colle_description.add(this.colle_use_3);
        colle_description.add(this.colle_use_4);
        colle_description.add(this.colle_use_5);
        colle_description.add(this.colle_use_6);
        List<String> cookies = new ArrayList<>();
        cookies.add(this.cookies_1);
        List<String> service_provider = new ArrayList<>();
        service_provider.add(this.service_1);
        service_provider.add(this.service_2);
        service_provider.add(this.service_3);
        service_provider.add(this.service_4);
        service_provider.add(this.service_5);
        service_provider.add(this.service_6);
        List<String> security = new ArrayList<>();
        security.add(this.security_1);
        List<String> link_site = new ArrayList<>();
        link_site.add(this.link_other_site);
        List<String> cld_privacy = new ArrayList<>();
        cld_privacy.add(this.child_privacy);
        List<String> cnge_privacy_policy = new ArrayList<>();
        cnge_privacy_policy.add(this.change_privacy_policy);
        List<String> contact_us = new ArrayList<>();
        contact_us.add(this.contact_us_1);
        contact_us.add(this.contact_us_2);
        this.listDataChild.put(this.listDataParent.get(0), policy_description);
        this.listDataChild.put(this.listDataParent.get(1), colle_description);
        this.listDataChild.put(this.listDataParent.get(2), cookies);
        this.listDataChild.put(this.listDataParent.get(3), service_provider);
        this.listDataChild.put(this.listDataParent.get(4), security);
        this.listDataChild.put(this.listDataParent.get(5), link_site);
        this.listDataChild.put(this.listDataParent.get(6), cld_privacy);
        this.listDataChild.put(this.listDataParent.get(7), cnge_privacy_policy);
        this.listDataChild.put(this.listDataParent.get(8), contact_us);
        this.adapter = new ExpandableListAdapter(this, this.listDataParent, this.listDataChild);
        this.expandableListView.setAdapter(this.adapter);
    }

    public void onClick(View v) {
//        if (v.getId() == R.id.back_img) {
//            String str = "COUNTRY_NAME";
//            if (this.policy_activty_no.equalsIgnoreCase("2")) {
//                Intent intent1 = new Intent(getApplicationContext(), NavItemDetailActivity.class);
//                intent1.putExtra(str, this.country_name_policy);
//                intent1.putExtra("CATEGORY_ID", this.policy_contest_id);
//
//                intent1 .putExtra("ACTIVITY_NO", policy_activty_no);
//                startActivity(intent1);
//                finish();
//            } else if (this.policy_activty_no.equalsIgnoreCase("1")) {
//                Intent intent2 = new Intent(getApplicationContext(), NavActivity.class);
//                intent2.putExtra(str, this.country_name_policy);
//                intent2.putExtra("CATEGORY_ID", this.policy_contest_id);
//                intent2 .putExtra("ACTIVITY_NO", policy_activty_no);
//                startActivity(intent2);
//                finish();
//            }
//        }
    }
}
